version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: shipments-postgres
    environment:
      POSTGRES_DB: shipments_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: shipments123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shipments-network
    restart: unless-stopped

  # PgAdmin para administración de BD
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: shipments-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@shipments.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - shipments-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Image Processing Service (Cloud Run)
  image-processing-service:
    build:
      context: .
      dockerfile: services/image_processing_service/Dockerfile
    container_name: image-processing-service
    environment:
      APP_VERSION: "2.0.0"
      ENVIRONMENT: "development"
      DEBUG: "true"
      PORT: "8082"
      BUCKET_IMAGENES_TEMP: "imagenes-temp-dev"
      BUCKET_IMAGENES_ORIGINALES: "imagenes-originales-dev"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "shipments_db"
      DB_USER: "postgres"
      DB_PASSWORD: "shipments123"
      SIGNED_URL_EXPIRATION_HOURS: "2"
      TEMP_FILES_CLEANUP_HOURS: "24"
      EMAIL_SERVICE_URL: "http://email-service:8083"
      LOG_LEVEL: "DEBUG"
    ports:
      - "8082:8082"
    volumes:
      - /tmp/shipments_processing:/tmp/shipments_processing
    networks:
      - shipments-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Email Service (Cloud Run 3)
  email-service:
    build:
      context: .
      dockerfile: services/email_service/Dockerfile
    container_name: email-service
    environment:
      APP_VERSION: "2.0.0"
      ENVIRONMENT: "development"
      DEBUG: "true"
      PORT: "8083"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "shipments_db"
      DB_USER: "postgres"
      DB_PASSWORD: "shipments123"
      SMTP_HOST: "mailhog"
      SMTP_PORT: "1025"
      FROM_EMAIL: "noreply@shipments-dev.com"
      LOG_LEVEL: "DEBUG"
    ports:
      - "8083:8083"
    networks:
      - shipments-network
    restart: unless-stopped
    depends_on:
      - postgres
      - mailhog

  # MailHog para desarrollo de emails
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      - shipments-network
    restart: unless-stopped

  # Redis para caché
  redis:
    image: redis:7-alpine
    container_name: shipments-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shipments-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  shipments-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
